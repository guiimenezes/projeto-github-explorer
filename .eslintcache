[{"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\App.tsx":"1","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\routes\\index.tsx":"2","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\index.tsx":"3","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\index.tsx":"4","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\styles.ts":"5","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\styles\\global.ts":"6","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\services\\api.ts":"7","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Repository\\index.tsx":"8","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Repository\\styles.ts":"9"},{"size":319,"mtime":1607744212132,"results":"10","hashOfConfig":"11"},{"size":382,"mtime":1607914699894,"results":"12","hashOfConfig":"11"},{"size":2553,"mtime":1607920258843,"results":"13","hashOfConfig":"11"},{"size":198,"mtime":1607737564928,"results":"14","hashOfConfig":"11"},{"size":1704,"mtime":1607912296881,"results":"15","hashOfConfig":"11"},{"size":510,"mtime":1607745258347,"results":"16","hashOfConfig":"11"},{"size":118,"mtime":1607803425499,"results":"17","hashOfConfig":"11"},{"size":2732,"mtime":1607928419097,"results":"18","hashOfConfig":"11"},{"size":1819,"mtime":1607928637691,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uela4o",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\App.tsx",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\routes\\index.tsx",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\index.tsx",[],["41","42"],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\styles\\global.ts",[],["43","44"],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\services\\api.ts",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Repository\\index.tsx",["45"],"import React, { useEffect, useState } from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { Header, Issues, RepositoryInfo } from './styles'\r\nimport logoImg from '../../assets/logo.svg'\r\nimport { FiChevronsLeft, FiChevronRight } from 'react-icons/fi'\r\nimport api from '../../services/api'\r\n\r\ninterface RepositoryParams {\r\n  repository: string\r\n}\r\ninterface Repository {\r\n  full_name: string\r\n  description: string\r\n  stargazers_count: number\r\n  forks_count: number\r\n  open_issues_count: number\r\n  owner: {\r\n    login: string\r\n    avatar_url: string\r\n  }\r\n}\r\n\r\ninterface Issue {\r\n  id: number\r\n  title: string\r\n  html_url: string\r\n  user: {\r\n    login: string\r\n  }\r\n}\r\n\r\nconst Repository: React.FC = () => {\r\n\r\n  const [repository, setRepository] = useState<Repository | null>(null)\r\n  const [issue, setIssue] = useState<Issue[]>([])\r\n\r\n  const { params } = useRouteMatch<RepositoryParams>()\r\n\r\n  useEffect(() => {\r\n    async function loadData(): Promise<void> {\r\n\r\n      const [repositories, issues] = await Promise.all([\r\n        api.get(`repos/${params.repository}`),\r\n        api.get(`repos/${params.repository}/issues`)\r\n      ])\r\n      if (repositories) {\r\n        setRepository(repositories.data)\r\n      }\r\n      if (issues) {\r\n        setIssue(issues.data)\r\n      }\r\n    }\r\n    loadData()\r\n  }, [params.repository])\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <img src={logoImg} alt=\"Github Explorer\" />\r\n        <Link to='/'>\r\n          <FiChevronsLeft size={16} />\r\n          Volar\r\n        </Link>\r\n      </Header>\r\n\r\n      {repository && (\r\n\r\n        <RepositoryInfo>\r\n          <header>\r\n            <img src={repository.owner.avatar_url} alt={repository.owner.login} />\r\n            <div>\r\n              <strong>{repository.full_name}</strong>\r\n              <p>{repository.description}</p>\r\n            </div>\r\n          </header>\r\n\r\n          <ul>\r\n            <li>\r\n              <strong>{repository.stargazers_count}</strong>\r\n              <span>Stars</span>\r\n            </li>\r\n            <li>\r\n              <strong>{repository.forks_count}</strong>\r\n              <span>Forks</span>\r\n            </li>\r\n            <li>\r\n              <strong>{repository.open_issues_count}</strong>\r\n              <span>Issues Abertas</span>\r\n            </li>\r\n          </ul>\r\n        </RepositoryInfo>\r\n      )}\r\n\r\n      <Issues>\r\n\r\n        {issue.map(issue => (\r\n          <a href={issue.html_url} key={issue.id} target='new_blank'>\r\n            <div>\r\n              <strong>{issue.title}</strong>\r\n              <p>{issue.user.login}</p>\r\n            </div>\r\n            <FiChevronRight size={20} />\r\n          </a>\r\n        ))}\r\n\r\n      </Issues>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Repository","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Repository\\styles.ts",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":32,"column":7,"nodeType":"54","messageId":"55","endLine":32,"endColumn":27},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"@typescript-eslint/no-redeclare","'Repository' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]