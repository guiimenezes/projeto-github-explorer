[{"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\App.tsx":"1","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\routes\\index.tsx":"2","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\index.tsx":"3","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\index.tsx":"4","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\styles.ts":"5","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\styles\\global.ts":"6","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\services\\api.ts":"7"},{"size":319,"mtime":1607744212132,"results":"8","hashOfConfig":"9"},{"size":361,"mtime":1607736921348,"results":"10","hashOfConfig":"9"},{"size":2464,"mtime":1607913249034,"results":"11","hashOfConfig":"9"},{"size":198,"mtime":1607737564928,"results":"12","hashOfConfig":"9"},{"size":1704,"mtime":1607912296881,"results":"13","hashOfConfig":"9"},{"size":510,"mtime":1607745258347,"results":"14","hashOfConfig":"9"},{"size":118,"mtime":1607803425499,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uela4o",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\App.tsx",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\routes\\index.tsx",[],["32","33"],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\index.tsx",["34"],"import React, { useState, FormEvent, useEffect } from 'react'\r\nimport logoImg from '../../assets/logo.svg'\r\nimport { Title, Form, Repositories, Error } from './styles'\r\nimport { FiChevronRight } from 'react-icons/fi'\r\nimport api from '../../services/api'\r\n\r\ninterface Repository {\r\n  full_name: string\r\n  description: string\r\n  owner: {\r\n    login: string\r\n    avatar_url: string\r\n  }\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [newRepo, setNewRepo] = useState('')\r\n  const [inputError, setInputError] = useState('')\r\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\r\n    const storagedRepositories = localStorage.getItem('@GithubExplorer:repositories')\r\n\r\n    if (storagedRepositories) {\r\n      return JSON.parse(storagedRepositories)\r\n    } else {\r\n      return []\r\n    }\r\n\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories))\r\n  }, [])\r\n\r\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>): Promise<void> {\r\n    event.preventDefault()\r\n    if (!newRepo) {\r\n      setInputError('Digite o autor/nome do reposit贸rio!')\r\n      return\r\n    }\r\n    try {\r\n      const response = await api.get<Repository>(`repos/${newRepo}`)\r\n      const repository = response.data\r\n      setRepositories([...repositories, repository])\r\n      setNewRepo('')\r\n      setInputError('')\r\n\r\n    } catch (err) {\r\n      setInputError('Erro na busca pelo reposit贸rio!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={logoImg} alt='Github Explorer' />\r\n      <Title> Explore reposit贸rios no Github</Title>\r\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\r\n        <input\r\n          placeholder='Digite o nome do reposit贸rio'\r\n          value={newRepo}\r\n          onChange={e => setNewRepo(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Pesquisar</button>\r\n      </Form>\r\n      {inputError && <Error>{inputError}</Error>}\r\n\r\n      <Repositories>\r\n        {repositories.map(repository => (\r\n          <a href='teste' key={repository.full_name}>\r\n            <img src={repository.owner.avatar_url}\r\n              alt={repository.owner.login}\r\n            />\r\n            <div>\r\n              <strong>{repository.full_name}</strong>\r\n              <p>{repository.description}</p>\r\n            </div>\r\n            <FiChevronRight size={20} />\r\n          </a>\r\n        ))}\r\n\r\n      </Repositories>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\index.tsx",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\styles\\global.ts",[],"C:\\Users\\Guii\\IGTI\\react trype script\\projeto\\src\\services\\api.ts",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":32,"column":6,"nodeType":"41","endLine":32,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'repositories'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [repositories]",{"range":"48","text":"49"},[931,933],"[repositories]"]